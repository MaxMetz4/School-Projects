<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.13.8" version="1.0">
This file is intended to be loaded by Logisim-evolution (https://github.com/reds-heig/logisim-evolution).
<lib desc="#Wiring" name="0">
    <tool name="Constant">
      <a name="facing" val="south"/>
      <a name="value" val="0x0"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1">
    <tool name="NOT Gate">
      <a name="facing" val="south"/>
    </tool>
    <tool name="OR Gate">
      <a name="facing" val="south"/>
    </tool>
  </lib>
  <lib desc="#Base" name="2">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <main name="D_Latch"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
    <a name="tickmain" val="half_period"/>
  </options>
  <mappings>
    <tool lib="2" map="Button2" name="Menu Tool"/>
    <tool lib="2" map="Button3" name="Menu Tool"/>
    <tool lib="2" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="2" name="Poke Tool"/>
    <tool lib="2" name="Edit Tool"/>
    <tool lib="2" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin">
      <a name="facing" val="south"/>
      <a name="labelloc" val="north"/>
    </tool>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="south"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate">
      <a name="inputs" val="5"/>
    </tool>
    <tool lib="1" name="OR Gate">
      <a name="inputs" val="5"/>
    </tool>
  </toolbar>
  <circuit name="NOR">
    <a name="circuit" val="NOR"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <a name="circuitvhdl" val="false"/>
    <a name="circuitvhdlpath" val=""/>
    <appear>
      <ellipse cx="80.0" cy="104.0" fill="none" rx="4.0" ry="4.0" stroke="#000000" stroke-width="2"/>
      <path d="M105,50 Q81,65 55,50" fill="none" stroke="#000000" stroke-width="2"/>
      <path d="M55,50 Q59,90 80,100" fill="none" stroke="#000000" stroke-width="2"/>
      <path d="M105,50 Q101,90 80,100" fill="none" stroke="#000000" stroke-width="2"/>
      <circ-port height="8" pin="80,90" width="8" x="56" y="46"/>
      <circ-port height="8" pin="120,90" width="8" x="96" y="46"/>
      <circ-port height="10" pin="100,250" width="10" x="75" y="105"/>
      <circ-anchor facing="south" height="6" width="6" x="77" y="47"/>
    </appear>
    <wire from="(80,90)" to="(80,130)"/>
    <wire from="(120,90)" to="(120,130)"/>
    <wire from="(100,180)" to="(100,190)"/>
    <wire from="(100,220)" to="(100,250)"/>
    <comp lib="0" loc="(80,90)" name="Pin">
      <a name="facing" val="south"/>
      <a name="label" val="X"/>
      <a name="labelloc" val="north"/>
    </comp>
    <comp lib="0" loc="(120,90)" name="Pin">
      <a name="facing" val="south"/>
      <a name="label" val="Y"/>
      <a name="labelloc" val="north"/>
    </comp>
    <comp lib="2" loc="(402,65)" name="Text">
      <a name="text" val="This gate returns 1 if both bits are 0, and 1 otherwise"/>
    </comp>
    <comp lib="2" loc="(417,42)" name="Text">
      <a name="text" val="Using only OR and NOT gates, please create the NOR gate"/>
    </comp>
    <comp lib="1" loc="(100,180)" name="OR Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="0" loc="(100,250)" name="Pin">
      <a name="facing" val="north"/>
      <a name="output" val="true"/>
      <a name="label" val="Out"/>
      <a name="labelloc" val="east"/>
    </comp>
    <comp lib="1" loc="(100,220)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="2" loc="(271,29)" name="Text">
      <a name="text" val="NOR"/>
      <a name="font" val="SansSerif plain 20"/>
    </comp>
  </circuit>
  <circuit name="TwoBit_Decoder">
    <a name="circuit" val="TwoBit_Decoder"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <a name="circuitvhdl" val="false"/>
    <a name="circuitvhdlpath" val=""/>
    <wire from="(140,280)" to="(140,350)"/>
    <wire from="(140,210)" to="(140,280)"/>
    <wire from="(140,140)" to="(140,210)"/>
    <wire from="(140,70)" to="(140,140)"/>
    <wire from="(90,240)" to="(90,310)"/>
    <wire from="(90,170)" to="(90,240)"/>
    <wire from="(90,100)" to="(90,170)"/>
    <wire from="(140,140)" to="(190,140)"/>
    <wire from="(140,210)" to="(190,210)"/>
    <wire from="(90,100)" to="(190,100)"/>
    <wire from="(90,240)" to="(190,240)"/>
    <wire from="(140,350)" to="(240,350)"/>
    <wire from="(140,280)" to="(240,280)"/>
    <wire from="(90,70)" to="(90,100)"/>
    <wire from="(90,310)" to="(240,310)"/>
    <wire from="(90,170)" to="(240,170)"/>
    <wire from="(220,100)" to="(240,100)"/>
    <wire from="(220,140)" to="(240,140)"/>
    <wire from="(220,210)" to="(240,210)"/>
    <wire from="(220,240)" to="(240,240)"/>
    <wire from="(290,190)" to="(300,190)"/>
    <wire from="(290,260)" to="(300,260)"/>
    <wire from="(290,330)" to="(300,330)"/>
    <wire from="(290,120)" to="(300,120)"/>
    <comp lib="2" loc="(613,112)" name="Text">
      <a name="text" val="10 should turn on Output2 and nothing else"/>
    </comp>
    <comp lib="0" loc="(300,260)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="label" val="Ouput2"/>
      <a name="labelloc" val="south"/>
    </comp>
    <comp lib="1" loc="(220,240)" name="NOT Gate"/>
    <comp lib="1" loc="(290,330)" name="AND Gate"/>
    <comp lib="1" loc="(220,210)" name="NOT Gate"/>
    <comp lib="2" loc="(614,83)" name="Text">
      <a name="text" val="00 should turn on Output0 and nothing else"/>
    </comp>
    <comp lib="1" loc="(220,140)" name="NOT Gate"/>
    <comp lib="1" loc="(220,100)" name="NOT Gate"/>
    <comp lib="2" loc="(614,97)" name="Text">
      <a name="text" val="01 should turn on Output1 and nothing else"/>
    </comp>
    <comp lib="0" loc="(300,190)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="label" val="Output1"/>
      <a name="labelloc" val="south"/>
    </comp>
    <comp lib="1" loc="(290,260)" name="AND Gate"/>
    <comp lib="0" loc="(90,70)" name="Pin">
      <a name="facing" val="south"/>
      <a name="label" val="Input0"/>
      <a name="labelloc" val="north"/>
    </comp>
    <comp lib="2" loc="(615,126)" name="Text">
      <a name="text" val="11 should turn on Output3 and nothing else"/>
    </comp>
    <comp lib="2" loc="(672,46)" name="Text">
      <a name="text" val="Using only AND and NOT gates, please write this decoder circuit"/>
    </comp>
    <comp lib="0" loc="(300,330)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="label" val="Ouput3"/>
      <a name="labelloc" val="south"/>
    </comp>
    <comp lib="0" loc="(300,120)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="label" val="Output0"/>
      <a name="labelloc" val="south"/>
    </comp>
    <comp lib="2" loc="(645,68)" name="Text">
      <a name="text" val="Consider the input 01 to mean Input0 is 0, Input1 is 1."/>
    </comp>
    <comp lib="2" loc="(552,29)" name="Text">
      <a name="text" val="2 Bit Decoder"/>
      <a name="font" val="SansSerif plain 20"/>
    </comp>
    <comp lib="0" loc="(140,70)" name="Pin">
      <a name="facing" val="south"/>
      <a name="label" val="Input1"/>
      <a name="labelloc" val="north"/>
    </comp>
    <comp lib="1" loc="(220,140)" name="NOT Gate"/>
    <comp lib="1" loc="(290,120)" name="AND Gate"/>
    <comp lib="1" loc="(290,190)" name="AND Gate"/>
  </circuit>
  <circuit name="SR_Latch">
    <a name="circuit" val="SR_Latch"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <a name="circuitvhdl" val="false"/>
    <a name="circuitvhdlpath" val=""/>
    <wire from="(180,110)" to="(270,110)"/>
    <wire from="(80,190)" to="(200,190)"/>
    <wire from="(80,50)" to="(200,50)"/>
    <wire from="(270,70)" to="(320,70)"/>
    <wire from="(190,90)" to="(190,130)"/>
    <wire from="(180,110)" to="(180,150)"/>
    <wire from="(270,130)" to="(270,170)"/>
    <wire from="(270,70)" to="(270,110)"/>
    <wire from="(180,150)" to="(200,150)"/>
    <wire from="(260,170)" to="(270,170)"/>
    <wire from="(190,130)" to="(270,130)"/>
    <wire from="(190,90)" to="(200,90)"/>
    <wire from="(260,70)" to="(270,70)"/>
    <comp lib="0" loc="(320,70)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="pull" val="up"/>
      <a name="label" val="Q"/>
      <a name="labelloc" val="south"/>
    </comp>
    <comp lib="2" loc="(731,82)" name="Text">
      <a name="text" val="The output should become 1 when S is turned on, 0 when R is turned on, and remain whatever it is if both are turned off"/>
    </comp>
    <comp lib="2" loc="(667,170)" name="Text">
      <a name="text" val="If your wires turn red and Logism yells at you for apparent oscillation, you've messed something up."/>
    </comp>
    <comp lib="0" loc="(80,50)" name="Pin">
      <a name="pull" val="down"/>
      <a name="label" val="S"/>
      <a name="labelloc" val="north"/>
    </comp>
    <comp lib="2" loc="(705,66)" name="Text">
      <a name="text" val="In this circuit, each input feeds one NOR gate, and the output of each NOR gate loops intp the other input's gate"/>
    </comp>
    <comp lib="1" loc="(260,70)" name="NOR Gate"/>
    <comp lib="2" loc="(561,43)" name="Text">
      <a name="text" val="Using two of the NOR gate you just wrote, create an S-R latch"/>
    </comp>
    <comp lib="0" loc="(80,190)" name="Pin">
      <a name="pull" val="down"/>
      <a name="label" val="R"/>
      <a name="labelloc" val="north"/>
    </comp>
    <comp lib="2" loc="(699,130)" name="Text">
      <a name="text" val="This makes the latch different from any circuit you've worked with before, and the basis for computer memory."/>
    </comp>
    <comp lib="2" loc="(429,24)" name="Text">
      <a name="text" val="S-R Latch"/>
      <a name="font" val="SansSerif plain 20"/>
    </comp>
    <comp lib="2" loc="(580,117)" name="Text">
      <a name="text" val="Notice that in the SR=00 state, the output Q could be either 0 or 1 !  "/>
    </comp>
    <comp lib="2" loc="(565,96)" name="Text">
      <a name="text" val="The behavior of this circuit is not defined if both S and R are on"/>
    </comp>
    <comp lib="2" loc="(639,184)" name="Text">
      <a name="text" val="Logism will also throw this error every time you open a successfully built latch's .circ file"/>
    </comp>
    <comp lib="1" loc="(260,170)" name="NOR Gate"/>
    <comp lib="2" loc="(668,213)" name="Text">
      <a name="text" val="Then, draw your loop back in and it should function properly. If not, go to someone's office hours."/>
    </comp>
    <comp lib="2" loc="(726,198)" name="Text">
      <a name="text" val="To fix this, break any loop in your circuit, then in the Simulate menu up top turn &quot;Simulation Enabled&quot; on and off again"/>
    </comp>
  </circuit>
  <circuit name="D_Latch">
    <a name="circuit" val="D_Latch"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <a name="circuitvhdl" val="false"/>
    <a name="circuitvhdlpath" val=""/>
    <wire from="(180,110)" to="(210,110)"/>
    <wire from="(180,210)" to="(210,210)"/>
    <wire from="(360,150)" to="(450,150)"/>
    <wire from="(140,150)" to="(140,250)"/>
    <wire from="(180,110)" to="(180,210)"/>
    <wire from="(450,110)" to="(500,110)"/>
    <wire from="(360,190)" to="(380,190)"/>
    <wire from="(260,230)" to="(380,230)"/>
    <wire from="(260,90)" to="(380,90)"/>
    <wire from="(370,130)" to="(370,170)"/>
    <wire from="(360,150)" to="(360,190)"/>
    <wire from="(450,170)" to="(450,210)"/>
    <wire from="(450,110)" to="(450,150)"/>
    <wire from="(440,210)" to="(450,210)"/>
    <wire from="(440,110)" to="(450,110)"/>
    <wire from="(140,70)" to="(140,120)"/>
    <wire from="(370,130)" to="(380,130)"/>
    <wire from="(40,210)" to="(180,210)"/>
    <wire from="(370,170)" to="(450,170)"/>
    <wire from="(140,70)" to="(210,70)"/>
    <wire from="(140,250)" to="(210,250)"/>
    <wire from="(40,250)" to="(140,250)"/>
    <comp lib="1" loc="(440,110)" name="NOR Gate"/>
    <comp lib="2" loc="(799,176)" name="Text">
      <a name="text" val="If Strobe is 0, you need to stop any inputs to your S-R latch, consider how to do that"/>
    </comp>
    <comp lib="1" loc="(260,90)" name="AND Gate"/>
    <comp lib="2" loc="(217,42)" name="Text">
      <a name="text" val="I pledge my honor that I have abided by the Stevens Honor System"/>
    </comp>
    <comp lib="2" loc="(750,67)" name="Text">
      <a name="text" val="The D latch improves on the S-R by having one input, D, and a Strobe."/>
    </comp>
    <comp lib="0" loc="(40,210)" name="Pin">
      <a name="label" val="STROBE"/>
      <a name="labelloc" val="north"/>
    </comp>
    <comp lib="1" loc="(440,210)" name="NOR Gate"/>
    <comp lib="2" loc="(746,228)" name="Text">
      <a name="text" val="The whole oscillation deal also applies here - be ready to fight Logism"/>
    </comp>
    <comp lib="2" loc="(100,22)" name="Text">
      <a name="text" val="Name: Maxwell Metzner"/>
    </comp>
    <comp lib="2" loc="(743,148)" name="Text">
      <a name="text" val="If Strobe is 1, then the value of output should become the value of D"/>
    </comp>
    <comp lib="2" loc="(692,203)" name="Text">
      <a name="text" val="This avoids the situation where both S and R are on"/>
    </comp>
    <comp lib="1" loc="(260,230)" name="AND Gate"/>
    <comp lib="2" loc="(1179,219)" name="Text">
      <a name="text" val="Hint: Check out week8.pdf"/>
    </comp>
    <comp lib="1" loc="(140,120)" name="NOT Gate">
      <a name="facing" val="north"/>
    </comp>
    <comp lib="0" loc="(40,250)" name="Pin">
      <a name="label" val="D"/>
      <a name="labelloc" val="north"/>
    </comp>
    <comp lib="2" loc="(731,90)" name="Text">
      <a name="text" val="Your circuit should use 2 NOR gates, 2 AND gates, and 1 NOT. "/>
    </comp>
    <comp lib="2" loc="(891,164)" name="Text">
      <a name="text" val="This is accomplished with an S-R latch as part of the D latch - do not drag in your pre-built SR latch, create it anew!"/>
    </comp>
    <comp lib="2" loc="(852,52)" name="Text">
      <a name="text" val="The S-R latch we just designed has several flaws, such as both S and R being 1 not having defined output"/>
    </comp>
    <comp lib="2" loc="(582,34)" name="Text">
      <a name="text" val="D Latch"/>
      <a name="font" val="SansSerif plain 20"/>
    </comp>
    <comp lib="2" loc="(774,132)" name="Text">
      <a name="text" val="If Strobe is 0, then the value of D should have no impact at all on the output bit"/>
    </comp>
    <comp lib="0" loc="(500,110)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="label" val="Q"/>
      <a name="labelloc" val="south"/>
    </comp>
    <comp lib="2" loc="(792,189)" name="Text">
      <a name="text" val="D will feed eventually into both S and R inputs to the S-R latch, just invert one of them"/>
    </comp>
  </circuit>
</project>
