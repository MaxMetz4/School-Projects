<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.13.8" version="1.0">
This file is intended to be loaded by Logisim-evolution (https://github.com/reds-heig/logisim-evolution).
<lib desc="#Wiring" name="0">
    <tool name="Constant">
      <a name="facing" val="south"/>
      <a name="value" val="0x0"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1">
    <tool name="NOT Gate">
      <a name="facing" val="south"/>
    </tool>
    <tool name="AND Gate">
      <a name="facing" val="south"/>
    </tool>
    <tool name="OR Gate">
      <a name="facing" val="south"/>
    </tool>
    <tool name="XOR Gate">
      <a name="facing" val="south"/>
    </tool>
  </lib>
  <lib desc="#Base" name="2">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <tool name="Text">
      <a name="text" val="&lt;-- This is an xor gate made from and/or/not gates"/>
    </tool>
  </lib>
  <main name="ParityGenerator"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
    <a name="tickmain" val="half_period"/>
  </options>
  <mappings>
    <tool lib="2" map="Button2" name="Menu Tool"/>
    <tool lib="2" map="Button3" name="Menu Tool"/>
    <tool lib="2" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="2" name="Poke Tool"/>
    <tool lib="2" name="Edit Tool"/>
    <tool lib="2" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin">
      <a name="facing" val="south"/>
      <a name="labelloc" val="north"/>
    </tool>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="south"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate">
      <a name="inputs" val="5"/>
    </tool>
    <tool lib="1" name="OR Gate">
      <a name="inputs" val="5"/>
    </tool>
  </toolbar>
  <circuit name="XOR">
    <a name="circuit" val="XOR"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <a name="circuitvhdl" val="false"/>
    <a name="circuitvhdlpath" val=""/>
    <appear>
      <path d="M71,51 Q75,61 79,51" fill="none" stroke="#808080" stroke-width="2"/>
      <rect fill="none" height="30" stroke="#000000" stroke-width="2" width="50" x="50" y="50"/>
      <circ-port height="10" pin="270,170" width="10" x="95" y="55"/>
      <circ-port height="10" pin="350,410" width="10" x="95" y="65"/>
      <circ-port height="8" pin="60,90" width="8" x="56" y="46"/>
      <circ-port height="8" pin="70,310" width="8" x="66" y="46"/>
      <circ-port height="8" pin="100,90" width="8" x="76" y="46"/>
      <circ-port height="8" pin="140,310" width="8" x="86" y="46"/>
      <circ-anchor facing="east" height="6" width="6" x="97" y="57"/>
    </appear>
    <wire from="(60,190)" to="(120,190)"/>
    <wire from="(60,130)" to="(120,130)"/>
    <wire from="(170,360)" to="(170,500)"/>
    <wire from="(260,420)" to="(260,440)"/>
    <wire from="(100,450)" to="(210,450)"/>
    <wire from="(70,310)" to="(70,330)"/>
    <wire from="(100,90)" to="(100,110)"/>
    <wire from="(140,310)" to="(140,330)"/>
    <wire from="(170,180)" to="(210,180)"/>
    <wire from="(170,360)" to="(210,360)"/>
    <wire from="(260,370)" to="(260,400)"/>
    <wire from="(170,330)" to="(170,360)"/>
    <wire from="(70,380)" to="(70,480)"/>
    <wire from="(140,330)" to="(140,430)"/>
    <wire from="(260,400)" to="(280,400)"/>
    <wire from="(260,420)" to="(280,420)"/>
    <wire from="(60,90)" to="(60,130)"/>
    <wire from="(330,410)" to="(350,410)"/>
    <wire from="(200,120)" to="(200,160)"/>
    <wire from="(100,110)" to="(120,110)"/>
    <wire from="(100,170)" to="(120,170)"/>
    <wire from="(140,430)" to="(140,480)"/>
    <wire from="(260,170)" to="(270,170)"/>
    <wire from="(70,330)" to="(70,380)"/>
    <wire from="(100,450)" to="(100,500)"/>
    <wire from="(200,160)" to="(210,160)"/>
    <wire from="(70,380)" to="(210,380)"/>
    <wire from="(140,430)" to="(210,430)"/>
    <wire from="(100,330)" to="(100,450)"/>
    <wire from="(60,130)" to="(60,190)"/>
    <wire from="(100,110)" to="(100,170)"/>
    <comp lib="1" loc="(170,330)" name="NOT Gate"/>
    <comp lib="1" loc="(260,370)" name="AND Gate">
      <a name="inputs" val="5"/>
    </comp>
    <comp lib="1" loc="(260,170)" name="AND Gate">
      <a name="inputs" val="5"/>
    </comp>
    <comp lib="1" loc="(330,410)" name="OR Gate">
      <a name="inputs" val="5"/>
    </comp>
    <comp lib="1" loc="(260,440)" name="AND Gate">
      <a name="inputs" val="5"/>
    </comp>
    <comp lib="2" loc="(432,265)" name="Text">
      <a name="text" val="Both circuits are equivalent and valid representations of x XOR y"/>
    </comp>
    <comp lib="1" loc="(100,330)" name="NOT Gate"/>
    <comp lib="1" loc="(200,120)" name="NOT Gate"/>
    <comp lib="1" loc="(170,180)" name="OR Gate">
      <a name="inputs" val="5"/>
    </comp>
    <comp lib="0" loc="(100,90)" name="Pin">
      <a name="facing" val="south"/>
      <a name="label" val="Y"/>
      <a name="labelloc" val="north"/>
    </comp>
    <comp lib="0" loc="(60,90)" name="Pin">
      <a name="facing" val="south"/>
      <a name="label" val="X"/>
      <a name="labelloc" val="north"/>
    </comp>
    <comp lib="0" loc="(70,310)" name="Pin">
      <a name="facing" val="south"/>
      <a name="label" val="X"/>
      <a name="labelloc" val="north"/>
    </comp>
    <comp lib="1" loc="(170,120)" name="AND Gate">
      <a name="inputs" val="5"/>
    </comp>
    <comp lib="2" loc="(109,259)" name="Text">
      <a name="text" val="Minterm Expansion"/>
    </comp>
    <comp lib="0" loc="(270,170)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="south"/>
    </comp>
    <comp lib="0" loc="(350,410)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="south"/>
    </comp>
    <comp lib="2" loc="(133,37)" name="Text">
      <a name="text" val="x XOR y = (x or y) and not (x and y)"/>
    </comp>
    <comp lib="0" loc="(140,310)" name="Pin">
      <a name="facing" val="south"/>
      <a name="label" val="Y"/>
      <a name="labelloc" val="north"/>
    </comp>
  </circuit>
  <circuit name="MyXOR">
    <a name="circuit" val="MyXOR"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <a name="circuitvhdl" val="false"/>
    <a name="circuitvhdlpath" val=""/>
    <comp lib="2" loc="(230,41)" name="Text">
      <a name="text" val="Practice using Logism by recreating one of the implementations from XOR!"/>
    </comp>
  </circuit>
  <circuit name="ParityGenerator">
    <a name="circuit" val="ParityGenerator"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <a name="circuitvhdl" val="false"/>
    <a name="circuitvhdlpath" val=""/>
    <wire from="(420,260)" to="(470,260)"/>
    <wire from="(620,420)" to="(620,550)"/>
    <wire from="(510,270)" to="(510,280)"/>
    <wire from="(300,440)" to="(300,450)"/>
    <wire from="(520,610)" to="(520,680)"/>
    <wire from="(360,380)" to="(360,390)"/>
    <wire from="(340,440)" to="(340,450)"/>
    <wire from="(320,500)" to="(320,510)"/>
    <wire from="(360,260)" to="(360,280)"/>
    <wire from="(500,540)" to="(500,560)"/>
    <wire from="(400,270)" to="(510,270)"/>
    <wire from="(340,250)" to="(450,250)"/>
    <wire from="(260,260)" to="(360,260)"/>
    <wire from="(570,730)" to="(570,750)"/>
    <wire from="(300,250)" to="(340,250)"/>
    <wire from="(620,260)" to="(620,280)"/>
    <wire from="(580,540)" to="(580,560)"/>
    <wire from="(360,390)" to="(400,390)"/>
    <wire from="(600,640)" to="(600,680)"/>
    <wire from="(510,270)" to="(540,270)"/>
    <wire from="(520,680)" to="(550,680)"/>
    <wire from="(450,250)" to="(450,300)"/>
    <wire from="(340,440)" to="(420,440)"/>
    <wire from="(500,540)" to="(580,540)"/>
    <wire from="(450,250)" to="(580,250)"/>
    <wire from="(320,510)" to="(580,510)"/>
    <wire from="(360,260)" to="(420,260)"/>
    <wire from="(580,310)" to="(580,320)"/>
    <wire from="(540,550)" to="(540,560)"/>
    <wire from="(620,310)" to="(620,320)"/>
    <wire from="(620,550)" to="(620,560)"/>
    <wire from="(640,270)" to="(640,280)"/>
    <wire from="(220,250)" to="(220,260)"/>
    <wire from="(280,270)" to="(400,270)"/>
    <wire from="(400,270)" to="(400,280)"/>
    <wire from="(470,380)" to="(470,390)"/>
    <wire from="(280,270)" to="(280,280)"/>
    <wire from="(570,750)" to="(610,750)"/>
    <wire from="(470,260)" to="(470,280)"/>
    <wire from="(540,270)" to="(640,270)"/>
    <wire from="(260,360)" to="(260,440)"/>
    <wire from="(580,250)" to="(580,280)"/>
    <wire from="(260,440)" to="(300,440)"/>
    <wire from="(440,390)" to="(470,390)"/>
    <wire from="(300,210)" to="(300,250)"/>
    <wire from="(470,260)" to="(620,260)"/>
    <wire from="(220,250)" to="(300,250)"/>
    <wire from="(540,210)" to="(540,270)"/>
    <wire from="(420,210)" to="(420,260)"/>
    <wire from="(640,310)" to="(640,370)"/>
    <wire from="(340,250)" to="(340,300)"/>
    <wire from="(540,550)" to="(620,550)"/>
    <wire from="(590,680)" to="(600,680)"/>
    <comp lib="1" loc="(580,540)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(380,330)" name="AND Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="2" loc="(110,411)" name="Text">
      <a name="text" val="If there are only 2 inputs this fires --&gt;"/>
    </comp>
    <comp lib="2" loc="(59,79)" name="Text">
      <a name="text" val="Input Bits"/>
    </comp>
    <comp lib="1" loc="(640,310)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(360,380)" name="AND Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(490,330)" name="AND Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="2" loc="(929,38)" name="Text">
      <a name="text" val="Name: Maxwell Metzner"/>
    </comp>
    <comp lib="1" loc="(570,730)" name="AND Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(580,310)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(280,310)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="2" loc="(743,400)" name="Text">
      <a name="text" val="&lt;-- If there are no inputs this fires"/>
    </comp>
    <comp lib="0" loc="(540,210)" name="Pin">
      <a name="facing" val="south"/>
      <a name="label" val="Z"/>
      <a name="labelloc" val="north"/>
    </comp>
    <comp lib="2" loc="(497,68)" name="Text"/>
    <comp lib="2" loc="(147,84)" name="Text">
      <a name="text" val="Output Bit"/>
    </comp>
    <comp lib="1" loc="(620,310)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(240,310)" name="AND Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="2" loc="(523,27)" name="Text">
      <a name="text" val="Write your parity circuit here"/>
    </comp>
    <comp lib="1" loc="(320,500)" name="OR Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="0" loc="(420,210)" name="Pin">
      <a name="facing" val="south"/>
      <a name="label" val="Y"/>
      <a name="labelloc" val="north"/>
    </comp>
    <comp lib="2" loc="(828,646)" name="Text">
      <a name="text" val="&lt;-- This is an xor gate made from and/or/not gates"/>
    </comp>
    <comp lib="2" loc="(1044,65)" name="Text">
      <a name="text" val="I pledge my honor that I have abided by the Stevens Honor System"/>
    </comp>
    <comp lib="2" loc="(566,115)" name="Text">
      <a name="text" val="WRITE YOUR NAME AND PLEDGE SOMEWHERE IN THIS CIRCUIT"/>
    </comp>
    <comp lib="0" loc="(300,210)" name="Pin">
      <a name="facing" val="south"/>
      <a name="label" val="X"/>
      <a name="labelloc" val="north"/>
    </comp>
    <comp lib="1" loc="(470,380)" name="AND Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(420,440)" name="OR Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="2" loc="(554,78)" name="Text">
      <a name="text" val="ONLY use: NOT, AND, OR, and any custom functions you write (included in the .circ submission)"/>
    </comp>
    <comp lib="1" loc="(600,370)" name="AND Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(260,360)" name="AND Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(600,610)" name="AND Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(450,330)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="0" loc="(610,750)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="label" val="Parity"/>
      <a name="labelloc" val="north"/>
    </comp>
    <comp lib="1" loc="(520,610)" name="OR Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(620,420)" name="AND Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(340,330)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="2" loc="(540,57)" name="Text">
      <a name="text" val="the output = 1 if an odd number of inputs (1 or 3) are 1, otherwise 0"/>
    </comp>
    <comp lib="1" loc="(600,640)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
  </circuit>
</project>
